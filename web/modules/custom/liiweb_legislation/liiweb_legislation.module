<?php

/**
 * @file
 * Contains liiweb_legislation.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function liiweb_legislation_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.liiweb_legislation':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provide extra') . '</p>';
      return $output;
  }
}


/**
 * Implements hook_theme().
 */
function liiweb_legislation_theme() {
  $theme = [];
  $path  = drupal_get_path('module', 'liiweb_legislation') . '/templates';

  // table content field
  $theme['field__node__field_toc__legislation'] = [
    'base hook' => 'field',
    'path'      => $path,
  ];

  // view custom block tab
  $theme['view_tabs_block'] = [
    'template'  => 'view-tabs-block',
    'path'      => $path,
    'variables' => [
      'subject' => Null,
      'search'  => Null,
      'browser' => Null,
      'glossary_filter' => Null,
    ],
  ];

  $theme['lifecycle_timeline'] = [
    'template'  => 'lifecycle-timeline',
    'path'      => $path,
  ];

  return $theme;
}

/**
 * Implements hook_ENTITY_view().
 */
function liiweb_legislation_node_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if($entity->getType() == 'legislation' && $view_mode == 'full') {
    /** @var \Drupal\liiweb\LiiWebUtils $utils */
    $utils = \Drupal::service('liiweb.utils');
    /** @var \Drupal\liiweb_legislation\LiiWebLegislationUIHelper $legislationUtils */
    $legislationUtils = \Drupal::service('liiweb_legislation.ui.utils');
    /** @var \Drupal\node\Entity\Node $node */
    $node = $build['#node'];
    $expressionJson = $utils->getLegislationJsonData($node);
    $build['#attached']['drupalSettings']['liiweb_legislation']['raw_json'] = $expressionJson;
    // stash the country code for use when displaying the legislation content
    $build['field_content']['country'] = $expressionJson->country;
    $build['field_content']['expression_frbr_uri'] = $expressionJson->expression_frbr_uri;

    try {
      /** @var \Drupal\node\Entity\Node $repeal */
      $repeal = $node->field_repeal->entity->field_repeal_work->entity;
    } catch (\Exception $e) {
      $repeal = NULL;
    }
    if($repeal) {
      $repealDate = $node->field_repeal->entity->field_repeal_date->date;
      $build['field_frbr_uri']['#attributes']['class'][] = 'alert-red';
      $build['field_frbr_uri'][0]['#template'] = '{{ value|raw }}';
      $build['field_frbr_uri'][0]['#context']['value'] = $legislationUtils->formatBannerRepealedExpression($repeal, $repealDate);
    }
    elseif($node->isDefaultRevision()) {
      $build['field_frbr_uri']['#attributes']['class'][] = 'alert-primary';
      $from = $expressionJson->expression_date;
      $build['field_frbr_uri'][0]['#context']['value'] = $legislationUtils->formatBannerCurrentExpression($from, $node->id());
    }
    else {
      $from = $expressionJson->commencement_date;
      $to = $expressionJson->in_force_to;
      $message = $legislationUtils->formatBannerOlderExpression($from, $to, $node->id());
      $build['field_frbr_uri']['#attributes']['class'][] = 'alert-red';
      $build['field_frbr_uri'][0]['#template'] = '{{ value|raw }}';
      $build['field_frbr_uri'][0]['#context']['value'] = $message;
    }
  }
}
